// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© bullbearpanda

//@version=5
indicator('BullBearPanda Trend Progression', overlay=true)

//------------------------------------------------------------------------------
//-------------------------------------------------------------------- Variables
//------------------------------------------------------------------------------

tcm = input.float(0.3, title="Trend Change Minimum", minval=0.1, maxval=1.0)

fast_period = input.int(200, "Fast Period EMA")
slow_period = input.int(200, "Slow Period SMA")

fast = ta.ema(close, fast_period)
slow = ta.sma(close, slow_period)

IDX_PEAK = 0
IDX_INVAL = 1
IDX_TR = 2

var metrics = array.new_float(3, 0.0)
var trend = 'Neutral'
var line level = na

//------------------------------------------------------------------------------
//---------------------------------------------------------------------- Utility
//------------------------------------------------------------------------------

to_bullish() =>
    array.set(metrics, IDX_PEAK, high)
    array.set(metrics, IDX_INVAL, low)
    array.set(metrics, IDX_TR, ta.tr)

to_bearish() =>
    array.set(metrics, IDX_PEAK, low)
    array.set(metrics, IDX_INVAL, high)
    array.set(metrics, IDX_TR, ta.tr)

//------------------------------------------------------------------------------
//-------------------------------------------------------------- Candle Analysis
//------------------------------------------------------------------------------

// bullEngulfing = close > high[1] and low < low[1]
// bearEngulfing = close < low[1] and high > high[1]

// candle_range = (high - low) / 3
// high_close = close <= high and (high - candle_range) < close
// low_close = close >= low and (low + candle_range) > close
// mid_close = (high - candle_range) > close and (low + candle_range) < close

//------------------------------------------------------------------------------
//------------------------------------------------------------------ Trend Logic
//------------------------------------------------------------------------------

//TODO: Move invalidation when wicks occur
//TODO: Mark the relevant levels on the chart
//TODO: Maybe look into filtering big impulses based on atr
//TODO: Consider adding logic to handle reclaims/fakeouts
//TODO: Check if it makes sense to include candle analysis into the trend change decision

peak = array.get(metrics, IDX_PEAK)
inval = array.get(metrics, IDX_INVAL)
true_range = array.get(metrics, IDX_TR)

if trend == 'Neutral'
    if close > high[1]
        trend := 'Bullish'
        to_bullish()

    if close < low[1]
        trend := 'Bearish'
        to_bearish()

else if trend == 'Sideways'
    if peak > inval // Bullish Sideways
        significant_inval = inval - (true_range * tcm)
        significant_peak = peak + (true_range * tcm)

        // Trend Change
        if close < significant_inval
            trend := 'Bearish'
            to_bearish()
        // Trend Continuation
        else if close > significant_peak
            trend := 'Bullish'
            to_bullish()
    else if peak < inval // Bearish Sideways
        significant_inval = inval + (true_range * tcm)
        significant_peak = peak - (true_range * tcm)

        // Trend Change
        if close > significant_inval
            trend := 'Bullish'
            to_bullish()
        // Trend Continuation
        else if close < significant_peak
            trend := 'Bearish'
            to_bearish()

else if trend == 'Bullish'
    significant_inval = inval - (true_range * tcm)
    significant_peak = peak + (true_range * tcm)

    if close < significant_inval
        trend := 'Bearish'
        to_bearish()

    else if close > significant_peak
        to_bullish()
    
    else
        trend := 'Sideways'

else if trend == 'Bearish'
    significant_inval = inval + (true_range * tcm)
    significant_peak = peak - (true_range * tcm)

    if close > significant_inval
        trend := 'Bullish'
        to_bullish()

    else if close < significant_peak
        to_bearish()

    else
        trend := 'Sideways'
        
// line.set_x2(level, bar_index)
//         level := line.new(bar_index, invalidation, bar_index, invalidation, color=color.green, style=line.style_dashed, width=1, extend=extend.none)
//         level

//------------------------------------------------------------------------------
//------------------------------------------------------------------------ Plots
//------------------------------------------------------------------------------

if not na(level) and line.get_x2(level) != bar_index
    line.set_x2(level, bar_index)

barclr = trend == 'Sideways' ? color.gray : trend == 'Bullish' ? color.green : color.red
barcolor(barclr)

plot(peak, color=color.green)
plot(inval, color=color.red)

// fast_avg = plot(fast, color = color.silver)
// slow_avg = plot(slow, color = color.white)
// fill_clr = fast > slow ? color.new(color.green, 75) : color.new(color.red, 75)
// fill(fast_avg, slow_avg, color = fill_clr)