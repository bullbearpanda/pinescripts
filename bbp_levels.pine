// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© bullbearpanda
// github.com/bullbearpanda
// twitter.com/bullbearpanda

//@version=5
indicator("Panda Levels", overlay = true, max_lines_count = 500)

//------------------------------------------------------------------------------
//------------------------------------------------------------------------ Input
//------------------------------------------------------------------------------

plotDaily = input.bool(true, "Plot Daily Open")
plotWeekly = input.bool(true, "Plot Weekly Open")

forex = input.session("0820-1700:23456", "Forex Session")       // America/New_York
america = input.session("0930-1600:23456", "US Session")        // America/New_York
europe = input.session("0800-1630:23456", "EU Session")         // Europe/London
asia = input.session("0900-1500:23456", "Asia Session")         // Asia/Tokyo

//------------------------------------------------------------------------------
//-------------------------------------------------------------------- Utilities
//------------------------------------------------------------------------------

isNewDay = timeframe.change("D")
isNewWeek = timeframe.change("W")

timeinrange(res, sess, tz) => not na(time(res, sess, tz))

//------------------------------------------------------------------------------
//-------------------------------------------------------------------- Variables
//------------------------------------------------------------------------------

session_forex = timeinrange(timeframe.period, forex, "America/New_York") and syminfo.type == "forex"
session_europe = timeinrange(timeframe.period, europe, "Europe/London")
session_america = timeinrange(timeframe.period, america, "America/New_York") and not (syminfo.type == "forex")
session_asia = timeinrange(timeframe.period, asia, "Asia/Tokyo")

//------------------------------------------------------------------------------
//------------------------------------------------------------------------ Plots
//------------------------------------------------------------------------------

var line line_daily = na
var line line_weekly = na

var line line_america = na
var line line_europe = na
var line line_asia = na

if isNewWeek and plotWeekly
    if not na(line_weekly)
        line_weekly.set_extend(extend.none)
        line_weekly.set_x2(bar_index)
    line_weekly := line.new(bar_index, open, bar_index + 1, open, extend = extend.right, color = color.rgb(217, 0, 255), style = line.style_dotted, width = 2)

if timeframe.isintraday
    if isNewDay and plotDaily
        if not na(line_daily) and dayofweek != dayofweek.tuesday
            line_daily.set_extend(extend.none)
            line_daily.set_x2(bar_index)
        if dayofweek != dayofweek.monday
            line_daily := line.new(bar_index, open, bar_index + 1, open, extend = extend.right, color = color.rgb(217, 0, 255, 25), style = line.style_dotted, width = 1)

    if session_forex and not session_forex[1]
        line_america := line.new(bar_index, open, bar_index + 1, open, color = color.red, style = line.style_dashed, width = 1)
    else if ((not session_forex and session_forex[1]) or session_forex) and not na(line_america)
        line_america.set_x2(bar_index)

    if session_america and not session_america[1]
        line_america := line.new(bar_index, open, bar_index + 1, open, color = color.red, style = line.style_dashed, width = 1)
    else if ((not session_america and session_america[1]) or session_america) and not na(line_america)
        line_america.set_x2(bar_index)

    if session_europe and not session_europe[1]
        line_europe := line.new(bar_index, open, bar_index + 1, open, color = color.blue, style = line.style_dashed, width = 1)
    else if ((not session_europe and session_europe[1]) or session_europe) and not na(line_europe)
        line_europe.set_x2(bar_index)

    if session_asia and not session_asia[1]
        line_asia := line.new(bar_index, open, bar_index + 1, open, color = color.yellow, style = line.style_dashed, width = 1)
    else if ((not session_asia and session_asia[1]) or session_asia) and not na(line_asia)
        line_asia.set_x2(bar_index)
